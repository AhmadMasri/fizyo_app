{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Types.ObjectId": {
				"type": "string"
			},
			"IServiceProviders": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							},
							{
								"type": "string"
							}
						]
					},
					"uID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"bio": {
						"type": "string"
					},
					"specialities": {
						"type": "string"
					},
					"preferredServiceType": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string",
									"enum": [
										"online",
										"home",
										"office"
									]
								},
								"type": "array"
							}
						]
					},
					"minSessionFee": {
						"type": "number",
						"format": "double"
					},
					"maxSessionFee": {
						"type": "number",
						"format": "double"
					},
					"documents": {
						"properties": {
							"attType": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"url": {
								"type": "string"
							}
						},
						"required": [
							"attType",
							"name",
							"url"
						],
						"type": "object"
					},
					"reviewerUIDs": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Types.ObjectId"
								},
								"type": "array"
							}
						]
					},
					"verificationStatus": {
						"type": "string",
						"enum": [
							"notSubmitted",
							"pendingReview",
							"inReview",
							"verified",
							"rejected"
						]
					},
					"verificationDate": {
						"type": "string",
						"format": "date-time"
					},
					"verifiedByUID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"bio",
					"specialities",
					"preferredServiceType",
					"minSessionFee",
					"maxSessionFee",
					"verificationStatus",
					"verificationDate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_IServiceProviders_": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							},
							{
								"type": "string"
							}
						]
					},
					"uID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"bio": {
						"type": "string"
					},
					"specialities": {
						"type": "string"
					},
					"preferredServiceType": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"type": "string",
									"enum": [
										"online",
										"home",
										"office"
									]
								},
								"type": "array"
							}
						]
					},
					"minSessionFee": {
						"type": "number",
						"format": "double"
					},
					"maxSessionFee": {
						"type": "number",
						"format": "double"
					},
					"documents": {
						"properties": {
							"attType": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"url": {
								"type": "string"
							}
						},
						"required": [
							"attType",
							"name",
							"url"
						],
						"type": "object"
					},
					"reviewerUIDs": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Types.ObjectId"
								},
								"type": "array"
							}
						]
					},
					"verificationStatus": {
						"type": "string",
						"enum": [
							"notSubmitted",
							"pendingReview",
							"inReview",
							"verified",
							"rejected"
						]
					},
					"verificationDate": {
						"type": "string",
						"format": "date-time"
					},
					"verifiedByUID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"url": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IDisputes": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							},
							{
								"type": "string"
							}
						]
					},
					"sessionID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"firstPartyUID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"secondUID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"topic": {
						"type": "string"
					},
					"details": {
						"type": "string"
					},
					"attachments": {
						"items": {
							"properties": {
								"disType": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"url": {
									"type": "string"
								}
							},
							"required": [
								"disType",
								"name",
								"url"
							],
							"type": "object"
						},
						"type": "array"
					},
					"status": {
						"type": "string",
						"enum": [
							"sent",
							"received",
							"in-progress",
							"suspended",
							"rejected",
							"resolved"
						]
					},
					"resolverUID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"inProgressDate": {
						"type": "string",
						"format": "date-time"
					},
					"receivedDate": {
						"type": "string",
						"format": "date-time"
					},
					"suspendedDate": {
						"type": "string",
						"format": "date-time"
					},
					"closedDate": {
						"type": "string",
						"format": "date-time"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"topic",
					"details",
					"status",
					"inProgressDate",
					"receivedDate",
					"suspendedDate",
					"closedDate"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_IDisputes_": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							},
							{
								"type": "string"
							}
						]
					},
					"sessionID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"firstPartyUID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"secondUID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"topic": {
						"type": "string"
					},
					"details": {
						"type": "string"
					},
					"attachments": {
						"items": {
							"properties": {
								"disType": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"url": {
									"type": "string"
								}
							},
							"required": [
								"disType",
								"name",
								"url"
							],
							"type": "object"
						},
						"type": "array"
					},
					"status": {
						"type": "string",
						"enum": [
							"sent",
							"received",
							"in-progress",
							"suspended",
							"rejected",
							"resolved"
						]
					},
					"resolverUID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"inProgressDate": {
						"type": "string",
						"format": "date-time"
					},
					"receivedDate": {
						"type": "string",
						"format": "date-time"
					},
					"suspendedDate": {
						"type": "string",
						"format": "date-time"
					},
					"closedDate": {
						"type": "string",
						"format": "date-time"
					},
					"url": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"ICommunications": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"referenceType": {
						"type": "string",
						"enum": [
							"sessions",
							"agreements",
							"disputes",
							"users"
						]
					},
					"referenceID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"partiesUIDs": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Types.ObjectId"
								},
								"type": "array"
							}
						]
					},
					"lastUpdate": {
						"type": "string",
						"format": "date-time"
					},
					"messages": {
						"items": {
							"properties": {
								"deliveryDetails": {
									"items": {
										"additionalProperties": false,
										"type": "object"
									},
									"type": "array"
								},
								"sendDate": {
									"type": "string",
									"format": "date-time"
								},
								"senderUID": {
									"anyOf": [
										{
											"type": "string"
										},
										{
											"$ref": "#/components/schemas/Types.ObjectId"
										}
									]
								},
								"messageContent": {
									"type": "string"
								},
								"messageType": {
									"type": "string"
								}
							},
							"required": [
								"deliveryDetails",
								"sendDate",
								"senderUID",
								"messageContent",
								"messageType"
							],
							"type": "object"
						},
						"type": "array"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"referenceType",
					"lastUpdate",
					"messages"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_ICommunications_": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"referenceType": {
						"type": "string",
						"enum": [
							"sessions",
							"agreements",
							"disputes",
							"users"
						]
					},
					"referenceID": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"partiesUIDs": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Types.ObjectId"
								},
								"type": "array"
							}
						]
					},
					"lastUpdate": {
						"type": "string",
						"format": "date-time"
					},
					"messages": {
						"items": {
							"properties": {
								"deliveryDetails": {
									"items": {
										"additionalProperties": false,
										"type": "object"
									},
									"type": "array"
								},
								"sendDate": {
									"type": "string",
									"format": "date-time"
								},
								"senderUID": {
									"anyOf": [
										{
											"type": "string"
										},
										{
											"$ref": "#/components/schemas/Types.ObjectId"
										}
									]
								},
								"messageContent": {
									"type": "string"
								},
								"messageType": {
									"type": "string"
								}
							},
							"required": [
								"deliveryDetails",
								"sendDate",
								"senderUID",
								"messageContent",
								"messageType"
							],
							"type": "object"
						},
						"type": "array"
					},
					"url": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IAgreements": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"name": {
						"type": "string"
					},
					"parties": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					},
					"details": {
						"type": "string"
					},
					"attachments": {
						"items": {
							"additionalProperties": false,
							"type": "object"
						},
						"type": "array"
					},
					"reminder": {
						"type": "boolean"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"parties",
					"startDate",
					"endDate",
					"details",
					"attachments",
					"reminder"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_IAgreements_": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							}
						]
					},
					"name": {
						"type": "string"
					},
					"parties": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					},
					"details": {
						"type": "string"
					},
					"attachments": {
						"items": {
							"additionalProperties": false,
							"type": "object"
						},
						"type": "array"
					},
					"reminder": {
						"type": "boolean"
					},
					"url": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IUsers": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							},
							{
								"type": "string"
							}
						]
					},
					"email": {
						"type": "string"
					},
					"phoneNumber": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"profilePicture": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"gender": {
						"type": "string",
						"enum": [
							"Male",
							"Female"
						]
					},
					"DOB": {
						"type": "string",
						"format": "date-time"
					},
					"address": {
						"items": {
							"properties": {
								"manipolicity": {
									"type": "string"
								},
								"government": {
									"type": "string"
								},
								"country": {
									"type": "string"
								}
							},
							"required": [
								"manipolicity",
								"government",
								"country"
							],
							"type": "object"
						},
						"type": "array"
					},
					"verified": {
						"type": "string",
						"enum": [
							"notSent",
							"pending",
							"verified"
						]
					},
					"status": {
						"type": "string",
						"enum": [
							"inActive",
							"active",
							"suspended",
							"lost",
							"deleted"
						]
					},
					"accountType": {
						"type": "string",
						"enum": [
							"PT",
							"EM",
							"PA"
						]
					},
					"lastLoginDate": {
						"type": "string",
						"format": "date-time"
					},
					"accountSetting": {
						"additionalProperties": false,
						"type": "object"
					},
					"languages": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"maritalStatus": {
						"type": "string",
						"enum": [
							"married",
							"single",
							"divorced",
							"widow"
						]
					}
				},
				"required": [
					"email",
					"phoneNumber",
					"password",
					"profilePicture",
					"firstName",
					"lastName",
					"gender",
					"DOB",
					"address",
					"verified",
					"status",
					"accountType",
					"lastLoginDate",
					"accountSetting",
					"languages",
					"maritalStatus"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_IUsers_": {
				"properties": {
					"_id": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Types.ObjectId"
							},
							{
								"type": "string"
							}
						]
					},
					"email": {
						"type": "string"
					},
					"phoneNumber": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"profilePicture": {
						"type": "string"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"gender": {
						"type": "string",
						"enum": [
							"Male",
							"Female"
						]
					},
					"DOB": {
						"type": "string",
						"format": "date-time"
					},
					"address": {
						"items": {
							"properties": {
								"manipolicity": {
									"type": "string"
								},
								"government": {
									"type": "string"
								},
								"country": {
									"type": "string"
								}
							},
							"required": [
								"manipolicity",
								"government",
								"country"
							],
							"type": "object"
						},
						"type": "array"
					},
					"verified": {
						"type": "string",
						"enum": [
							"notSent",
							"pending",
							"verified"
						]
					},
					"status": {
						"type": "string",
						"enum": [
							"inActive",
							"active",
							"suspended",
							"lost",
							"deleted"
						]
					},
					"accountType": {
						"type": "string",
						"enum": [
							"PT",
							"EM",
							"PA"
						]
					},
					"lastLoginDate": {
						"type": "string",
						"format": "date-time"
					},
					"accountSetting": {
						"additionalProperties": false,
						"type": "object"
					},
					"languages": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"maritalStatus": {
						"type": "string",
						"enum": [
							"married",
							"single",
							"divorced",
							"widow"
						]
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"IRoles": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/Types.ObjectId"
					},
					"name": {
						"type": "string"
					},
					"employees": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Types.ObjectId"
								},
								"type": "array"
							}
						]
					},
					"users": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"service_provider": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"clients": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"sessions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"communications": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"disputes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"enum_values": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name",
					"users",
					"service_provider",
					"clients",
					"sessions",
					"communications",
					"disputes",
					"enum_values"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Partial_IRoles_": {
				"properties": {
					"_id": {
						"$ref": "#/components/schemas/Types.ObjectId"
					},
					"name": {
						"type": "string"
					},
					"employees": {
						"anyOf": [
							{
								"items": {
									"type": "string"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Types.ObjectId"
								},
								"type": "array"
							}
						]
					},
					"users": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"service_provider": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"clients": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"sessions": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"communications": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"disputes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"enum_values": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/serviceProviders": {
			"get": {
				"operationId": "GetServiceProviders",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IServiceProviders"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get List of All serviceProviders",
				"security": [],
				"parameters": []
			}
		},
		"/serviceProviders/{serviceProviderId}": {
			"get": {
				"operationId": "GetServiceProvider",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IServiceProviders"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested serviceProvider is not found"
					}
				},
				"description": "Get a serviceProvider details",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "serviceProviderId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "63107aae6bcd70f0f363847c"
					}
				]
			},
			"delete": {
				"operationId": "DeleteServiceProvider",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IServiceProviders"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested serviceProvider is not found"
					}
				},
				"description": "Delete a serverProvider",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "serviceProviderId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "63107aae6bcd70f0f363847c"
					}
				]
			}
		},
		"/serviceProviders/create": {
			"post": {
				"operationId": "CreateServiceProvider",
				"responses": {
					"200": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServiceProviders"
								},
								"examples": {
									"Example 1": {
										"value": {
											"uID": "43234erwrdfserwr",
											"bio": "this is the best",
											"specialities": "Physiotherapist",
											"preferredServiceType": [
												"online",
												"home",
												"office"
											],
											"minSessionFee": 100,
											"maxSessionFee": 150,
											"documents": {
												"url": "http://localhost:8000/documents",
												"name": "certificate",
												"attType": "pdf"
											},
											"reviewerUIDs": [
												"123456123457",
												"123456"
											],
											"verificationStatus": "notSubmitted",
											"verificationDate": "2022-09-10T00:00:00.000Z",
											"verifiedByUID": "43234erwrdfserwr"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Create a serviceProvider",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IServiceProviders"
							}
						}
					}
				}
			}
		},
		"/serviceProviders/update/{serviceProviderId}": {
			"put": {
				"operationId": "UpdateServiceProvider",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IServiceProviders"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Update a ServiceProvider",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "serviceProviderId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_IServiceProviders_"
							}
						}
					}
				}
			}
		},
		"/disputes": {
			"get": {
				"operationId": "GetDisputes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IDisputes"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get List of All disputes",
				"security": [],
				"parameters": []
			}
		},
		"/disputes/{disputeId}": {
			"get": {
				"operationId": "GetDispute",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IDisputes"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested dispute is not found"
					}
				},
				"description": "Get a dispute details",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "disputeId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "63107cdf144972d5a75c14cb"
					}
				]
			},
			"delete": {
				"operationId": "DeleteDispute",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IDisputes"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested dispute is not found"
					}
				},
				"description": "Delete a dispute",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "disputeId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "63107cdf144972d5a75c14cb"
					}
				]
			}
		},
		"/disputes/create": {
			"post": {
				"operationId": "CreateDispute",
				"responses": {
					"200": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IDisputes"
								},
								"examples": {
									"Example 1": {
										"value": {
											"sessionID": "yuuruyyudde",
											"firstPartyUID": "rtyetyertwrqer",
											"secondUID": "werweryrtgerwer",
											"topic": "treatment",
											"details": "more details",
											"attachments": [
												{
													"url": "http://localhost:8000/disputes",
													"name": "file",
													"disType": "pdf"
												}
											],
											"status": "sent",
											"resolverUID": "wertehterwrwrr",
											"inProgressDate": "2022-09-10T00:00:00.000Z",
											"receivedDate": "2022-09-10T00:00:00.000Z",
											"suspendedDate": "2022-09-10T00:00:00.000Z",
											"closedDate": "2022-09-10T00:00:00.000Z"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Create a dispute",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IDisputes"
							}
						}
					}
				}
			}
		},
		"/disputes/update/{disputeId}": {
			"put": {
				"operationId": "UpdateDispute",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IDisputes"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Update a dispute",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "disputeId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_IDisputes_"
							}
						}
					}
				}
			}
		},
		"/communications": {
			"get": {
				"operationId": "GetCommunications",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ICommunications"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get List of All communications",
				"security": [],
				"parameters": []
			}
		},
		"/communications/{communicationId}": {
			"get": {
				"operationId": "GetCommunication",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ICommunications"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested communication is not found"
					}
				},
				"description": "Get a communication details",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "communicationId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "63107b4a8e2578704ed06b1d"
					}
				]
			},
			"delete": {
				"operationId": "DeleteCommunication",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ICommunications"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested communication is not found"
					}
				},
				"description": "Delete a communication",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "communicationId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "63107b4a8e2578704ed06b1d"
					}
				]
			}
		},
		"/communications/create": {
			"post": {
				"operationId": "CreateCommunication",
				"responses": {
					"200": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ICommunications"
								},
								"examples": {
									"Example 1": {
										"value": {
											"referenceType": "sessions",
											"referenceID": "_",
											"partiesUIDs": [
												"_"
											],
											"lastUpdate": "2022-09-10T00:00:00.000Z",
											"messages": [
												{
													"messageType": "txt",
													"messageContent": "hello",
													"senderUID": "_",
													"sendDate": "2022-09-10T00:00:00.000Z",
													"deliveryDetails": [
														{
															"status": "done"
														}
													]
												}
											]
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Create a communication",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ICommunications"
							}
						}
					}
				}
			}
		},
		"/communications/update/{communicationId}": {
			"put": {
				"operationId": "UpdateCommunication",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/ICommunications"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Update a communication",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "communicationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_ICommunications_"
							}
						}
					}
				}
			}
		},
		"/agreements": {
			"get": {
				"operationId": "GetAgreements",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IAgreements"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get List of All agreements",
				"security": [],
				"parameters": []
			}
		},
		"/agreements/{agreementId}": {
			"get": {
				"operationId": "GetAgreement",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IAgreements"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested agreement is not found"
					}
				},
				"description": "Get a agreement details",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "agreementId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "630ded831cb815c4d98d3df6"
					}
				]
			},
			"delete": {
				"operationId": "DeleteAgreement",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IAgreements"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested agreement is not found"
					}
				},
				"description": "Delete a agreement",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "agreementId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "630ded831cb815c4d98d3df6"
					}
				]
			}
		},
		"/agreements/create": {
			"post": {
				"operationId": "CreateAgreement",
				"responses": {
					"200": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IAgreements"
								},
								"examples": {
									"Example 1": {
										"value": {
											"name": "Ahmad",
											"parties": [
												"certificate"
											],
											"startDate": "2022-09-10T00:00:00.000Z",
											"endDate": "2022-09-10T00:00:00.000Z",
											"details": "first Agreement",
											"attachments": [
												{
													"name": "personal information"
												}
											],
											"reminder": true
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Create a agreement",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IAgreements"
							}
						}
					}
				}
			}
		},
		"/agreements/update/{agreementId}": {
			"put": {
				"operationId": "UpdateAgreement",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IAgreements"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Update a agreement",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "agreementId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_IAgreements_"
							}
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IUsers"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all of users",
				"security": [],
				"parameters": []
			}
		},
		"/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUsers"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested user is not found"
					}
				},
				"description": "Get a user details",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "       "
					}
				]
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUsers"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested user is not found"
					}
				},
				"description": "Delete a user",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "ertwerwryer45"
					}
				]
			}
		},
		"/users/create": {
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUsers"
								},
								"examples": {
									"Example 1": {
										"value": {
											"email": "nour@gmail.com",
											"phoneNumber": "00352681531905",
											"password": "00352681531905",
											"profilePicture": "main.png",
											"firstName": "Muhammad",
											"lastName": "Nour",
											"gender": "Male",
											"DOB": "2022-09-10T00:00:00.000Z",
											"address": [
												{
													"country": "Syria",
													"government": "SY",
													"manipolicity": "Fixed"
												}
											],
											"verified": "notSent",
											"status": "active",
											"accountType": "EM",
											"lastLoginDate": "2022-09-10T00:00:00.000Z",
											"accountSetting": {
												"name": "Setting1",
												"value": "Some value"
											},
											"languages": [
												"AR",
												"EN"
											],
											"maritalStatus": "single"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation failed"
					}
				},
				"description": "Create a user",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUsers"
							}
						}
					}
				}
			}
		},
		"/users/update/{userId}": {
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUsers"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Update user",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_IUsers_"
							}
						}
					}
				}
			}
		},
		"/roles": {
			"get": {
				"operationId": "GetRoles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IRoles"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all of roles",
				"security": [],
				"parameters": []
			}
		},
		"/roles/{roleId}": {
			"get": {
				"operationId": "GetRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IRoles"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested role is not found"
					}
				},
				"description": "Get role details",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "       "
					}
				]
			},
			"delete": {
				"operationId": "DeleteRole",
				"responses": {
					"200": {
						"description": "Deleted",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IRoles"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"404": {
						"description": "The requested role is not found"
					}
				},
				"description": "Delete role",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "ertwerwryer45"
					}
				]
			}
		},
		"/roles/create": {
			"post": {
				"operationId": "CreateRole",
				"responses": {
					"200": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IRoles"
								},
								"examples": {
									"Example 1": {
										"value": {
											"name": "Admin",
											"employees": [],
											"users": [],
											"service_provider": [],
											"clients": [],
											"sessions": [],
											"communications": [],
											"disputes": [],
											"enum_values": []
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation failed"
					}
				},
				"description": "Create role",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IRoles"
							}
						}
					}
				}
			}
		},
		"/roles/update/{roleId}": {
			"put": {
				"operationId": "UpdateRole",
				"responses": {
					"200": {
						"description": "Updated",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IRoles"
										}
									],
									"nullable": true
								}
							}
						}
					},
					"422": {
						"description": "Validation Failed"
					}
				},
				"description": "Update role",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_IRoles_"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}